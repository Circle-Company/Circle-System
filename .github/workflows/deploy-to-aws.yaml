name: Push-to-EC2
on:
    push:
        branches:
            - main

jobs:
    build:
        name: Build Docker Image
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Source
              uses: actions/checkout@v3

            - name: Login to Docker Hub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker Image
              run: docker build --target build -t tiagosavioli/circle-system:latest .

            - name: Publish Image to Docker Hub
              run: docker push tiagosavioli/circle-system:latest

    deploy:
        name: Deploy to EC2
        needs: build
        runs-on: self-hosted

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Save and Configure SSH Key
              run: |
                  echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > circle-system-key.pem
                  chmod 600 circle-system-key.pem

            - name: Add EC2 to Known Hosts
              run: ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

            - name: Deploy Containers
              run: |
                  ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i circle-system-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'

                  set -e # Para a execu√ß√£o se algum comando falhar

                  echo "üõ†Ô∏è Iniciando Deploy no EC2..."

                  # Atualiza pacotes e reinicia o Docker
                  sudo apt-get update -y
                  sudo systemctl restart docker

                  # Parar containers antigos, se existirem
                  docker stop circle-system-01 nginx || true
                  docker rm -f circle-system-01 nginx || true

                  # Criar rede Docker, se n√£o existir
                  if ! docker network inspect circle_network >/dev/null 2>&1; then
                      docker network create circle_network
                  fi

                  # Login no Docker Hub
                  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

                  # Baixar a nova imagem
                  docker pull tiagosavioli/circle-system:latest

                  # Rodar backend com vari√°veis de ambiente corretamente
                  docker run -d --name circle-system-01 \
                    --restart unless-stopped \
                    --network circle_network \
                    --env-file /home/ubuntu/.env \
                    -p 3000:3000 \
                    tiagosavioli/circle-system:latest

                  # Criando configura√ß√£o do Nginx
                  cat <<EOT > nginx.conf
                  worker_processes auto;

                  events {
                      worker_connections 1024;
                  }

                  http {
                      upstream backend {
                          server circle-system-01:3000;
                      }

                      server {
                          listen 80;

                          location / {
                              proxy_pass http://circle-system-01:3000;
                              proxy_http_version 1.1;
                              proxy_set_header Upgrade \$http_upgrade;
                              proxy_set_header Connection 'upgrade';
                              proxy_set_header Host \$host;
                              proxy_cache_bypass \$http_upgrade;
                          }
                      }
                  }
                  EOT

                  # Iniciar Nginx corretamente
                  docker run -d --name nginx \
                    --restart unless-stopped \
                    --network circle_network \
                    -p 80:80 \
                    -v $(pwd)/nginx.conf:/etc/nginx/nginx.conf:ro \
                    nginx:latest

                  echo "‚úÖ Deploy conclu√≠do com sucesso!"

                  EOF
