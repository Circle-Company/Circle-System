name: Push-to-EC2
on:
    push:
        branches:
            - main

jobs:
    build:
        name: Build Docker Image
        runs-on: [ubuntu-latest]

        steps:
            - name: Checkout Source
              uses: actions/checkout@v3

            - name: Login to Docker Hub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            - name: Build docker image
              run: docker build --target build -t tiagosavioli/circle-system:latest .
            - name: Publish image to Docker Hub
              run: docker push tiagosavioli/circle-system:latest

    deploy:
        name: Deploy to EC2
        needs: build
        runs-on: self-hosted

        steps:
            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                  ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
              env:
                  SSH_PRIVATE_KEY: ${{secrets.EC2_SSH_PRIVATE_KEY}}
                  ACTIONS_STEP_DEBUG: true
            - name: Deploy Containers
              run: |
                  ssh -o StrictHostKeyChecking=no ubuntu@"$SSH_PRIVATE_KEY" << 'EOF'
                  # Login no Docker Hub
                  echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin;

                  # Baixando a última imagem
                  docker pull tiagosavioli/circle-system:latest;

                  # Removendo containers antigos (se existirem)
                  docker rm -f circle-system-01 || true;
                  docker rm -f circle-system-02 || true;
                  docker rm -f circle-system-03 || true;
                  docker rm -f reverse-proxy || true;

                  # Rodando instâncias da aplicação
                  docker run -d --name circle-system-01 --restart unless-stopped -p 3000:3000 tiagosavioli/circle-system:latest;
                  docker run -d --name circle-system-02 --restart unless-stopped -p 3001:3000 tiagosavioli/circle-system:latest;
                  docker run -d --name circle-system-03 --restart unless-stopped -p 3002:3000 tiagosavioli/circle-system:latest;

                  # Rodando o Traefik como proxy reverso
                  docker run -d --name reverse-proxy --restart unless-stopped \
                      -p 80:80 -p 8080:8080 \
                      -v /var/run/docker.sock:/var/run/docker.sock:ro \
                      traefik:v3.3.1 \
                      --api.dashboard=true \
                      --providers.docker=true \
                      --providers.docker.exposedbydefault=false \
                      --entrypoints.web.address=:80 \
                      --entrypoints.dashboard.address=:8080;
                  "
