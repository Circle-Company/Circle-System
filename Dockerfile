#Build stage
FROM node:18-alpine AS build

ARG PORT
ARG NODE_ENV
ARG API_VERSION
ARG RUN_SCRIPTS_MODE
ARG CIRCLE_SWIPE_ENGINE_API
ARG DEVELOPMENT_DB_HOST
ARG DEVELOPMENT_DB_USERNAME
ARG DEVELOPMENT_DB_PASSWORD
ARG DEVELOPMENT_DB_NAME
ARG TEST_DB_HOST
ARG TEST_DB_USERNAME
ARG TEST_DB_PASSWORD
ARG TEST_DB_NAME
ARG PRODUCTION_DB_HOST
ARG PRODUCTION_DB_USERNAME
ARG PRODUCTION_DB_PASSWORD
ARG PRODUCTION_DB_NAME
ARG PRODUCTION_DB_CLEAN_ALLOW
ARG JWT_EXPIRES
ARG JWT_SECRET
ARG JWT_ISSUER
ARG JWT_AUDIENCE
ARG PRIVATE_KEY_PASSPHRASE
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_ENDPOINT
ARG AWS_REGION
ARG AWS_MIDIA_BUCKET_DEVELOPMENT
ARG AWS_MIDIA_BUCKET_TEST
ARG AWS_MIDIA_BUCKET_PRODUCTION
ARG AWS_PROFILE_MIDIA_BUCKET_DEVELOPMENT
ARG AWS_PROFILE_MIDIA_BUCKET_TEST
ARG AWS_PROFILE_MIDIA_BUCKET_PRODUCTION
ARG EMAIL_DEFAULT_SENDER
ARG PUBLIC_REGISTRATION
ARG INVITE_REGISTRATION
ARG TWILIO_ACCOUNT_SID
ARG TWILIO_AUTH_TOKEN
ARG TWILIO_MESSAGE_SERVICE_SID
ARG TWILIO_PHONE_NUMBER
ARG FIREBASE_PROJECT_ID
ARG FIREBASE_PRIVATE_KEY_ID
ARG FIREBASE_PRIVATE_KEY
ARG FIREBASE_CLIENT_EMAIL
ARG FIREBASE_CLIENT_ID
ARG FIREBASE_AUTH_URI
ARG FIREBASE_TOKEN_URI
ARG FIREBASE_AUTH_PROVIDER_CERT_URL
ARG FIREBASE_CLIENT_CERT_URL
ARG FIREBASE_UNIVERSE_DOMAIN

# Convertendo ARG para ENV
ENV PORT=$PORT
ENV NODE_ENV=$NODE_ENV
ENV API_VERSION=$API_VERSION
ENV RUN_SCRIPTS_MODE=$RUN_SCRIPTS_MODE
ENV CIRCLE_SWIPE_ENGINE_API=$CIRCLE_SWIPE_ENGINE_API
ENV DEVELOPMENT_DB_HOST=$DEVELOPMENT_DB_HOST
ENV DEVELOPMENT_DB_USERNAME=$DEVELOPMENT_DB_USERNAME
ENV DEVELOPMENT_DB_PASSWORD=$DEVELOPMENT_DB_PASSWORD
ENV DEVELOPMENT_DB_NAME=$DEVELOPMENT_DB_NAME
ENV TEST_DB_HOST=$TEST_DB_HOST
ENV TEST_DB_USERNAME=$TEST_DB_USERNAME
ENV TEST_DB_PASSWORD=$TEST_DB_PASSWORD
ENV TEST_DB_NAME=$TEST_DB_NAME
ENV PRODUCTION_DB_HOST=$PRODUCTION_DB_HOST
ENV PRODUCTION_DB_USERNAME=$PRODUCTION_DB_USERNAME
ENV PRODUCTION_DB_PASSWORD=$PRODUCTION_DB_PASSWORD
ENV PRODUCTION_DB_NAME=$PRODUCTION_DB_NAME
ENV PRODUCTION_DB_CLEAN_ALLOW=$PRODUCTION_DB_CLEAN_ALLOW
ENV JWT_EXPIRES=$JWT_EXPIRES
ENV JWT_SECRET=$JWT_SECRET
ENV JWT_ISSUER=$JWT_ISSUER
ENV JWT_AUDIENCE=$JWT_AUDIENCE
ENV PRIVATE_KEY_PASSPHRASE=$PRIVATE_KEY_PASSPHRASE
ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_ENDPOINT=$AWS_ENDPOINT
ENV AWS_REGION=$AWS_REGION
ENV AWS_MIDIA_BUCKET_DEVELOPMENT=$AWS_MIDIA_BUCKET_DEVELOPMENT
ENV AWS_MIDIA_BUCKET_TEST=$AWS_MIDIA_BUCKET_TEST
ENV AWS_MIDIA_BUCKET_PRODUCTION=$AWS_MIDIA_BUCKET_PRODUCTION
ENV AWS_PROFILE_MIDIA_BUCKET_DEVELOPMENT=$AWS_PROFILE_MIDIA_BUCKET_DEVELOPMENT
ENV AWS_PROFILE_MIDIA_BUCKET_TEST=$AWS_PROFILE_MIDIA_BUCKET_TEST
ENV AWS_PROFILE_MIDIA_BUCKET_PRODUCTION=$AWS_PROFILE_MIDIA_BUCKET_PRODUCTION
ENV EMAIL_DEFAULT_SENDER=$EMAIL_DEFAULT_SENDER
ENV PUBLIC_REGISTRATION=$PUBLIC_REGISTRATION
ENV INVITE_REGISTRATION=$INVITE_REGISTRATION
ENV TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID
ENV TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN
ENV TWILIO_MESSAGE_SERVICE_SID=$TWILIO_MESSAGE_SERVICE_SID
ENV TWILIO_PHONE_NUMBER=$TWILIO_PHONE_NUMBER
ENV FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID
ENV FIREBASE_PRIVATE_KEY_ID=$FIREBASE_PRIVATE_KEY_ID
ENV FIREBASE_PRIVATE_KEY=$FIREBASE_PRIVATE_KEY
ENV FIREBASE_CLIENT_EMAIL=$FIREBASE_CLIENT_EMAIL
ENV FIREBASE_CLIENT_ID=$FIREBASE_CLIENT_ID
ENV FIREBASE_AUTH_URI=$FIREBASE_AUTH_URI
ENV FIREBASE_TOKEN_URI=$FIREBASE_TOKEN_URI
ENV FIREBASE_AUTH_PROVIDER_CERT_URL=$FIREBASE_AUTH_PROVIDER_CERT_URL
ENV FIREBASE_CLIENT_CERT_URL=$FIREBASE_CLIENT_CERT_URL
ENV FIREBASE_UNIVERSE_DOMAIN=$FIREBASE_UNIVERSE_DOMAIN

WORKDIR /app

# Copia apenas arquivos essenciais para instalar dependências corretamente
COPY package*.json ./ 
COPY tsconfig*.json ./ 

RUN ls -la /app


RUN npm install
RUN npm uninstall sharp
RUN npm install --platform=linux --arch=x64 sharp
RUN npm install body-parser
COPY . .

RUN npm run build

# Define o comando de inicialização do container
CMD ["npm", "start"]

#Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Copia apenas os arquivos necessários da fase de build
COPY --from=build /app/build ./build
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/package.json ./package.json
COPY --from=build /app/nginx.conf ./nginx.conf
COPY --from=build /app/.env ./.env

RUN npm install --only=production

# Garantir que o .env está no local correto
RUN ls -la /app

CMD ["npm", "start"]