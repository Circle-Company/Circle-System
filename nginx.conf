worker_processes auto;

# Arquivo de configuração para ambiente de produção
pid /var/run/nginx.pid;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # Configurações básicas
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Otimizações de desempenho
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configuração de compressão
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    gzip_proxied any;
    gzip_vary on;

    # Limites e timeouts
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Configuração de cache
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

    # Configuração do servidor upstream
    upstream backend {
        zone upstream_backend 64k;
        server circle-system-01:3000 resolve;
        keepalive 32;
        resolver 127.0.0.11 valid=30s ipv6=off;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Cabeçalhos de segurança
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Configuração de proxy
        location / {
            auth_basic off;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # Mantém os cabeçalhos do cliente na requisição proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";

            # Passando o token de autorização corretamente para a API backend
            proxy_set_header Authorization $http_authorization;
            proxy_set_header authorization_token $http_authorization;

            # Remove cache para requisições com token (evita problemas de autenticação)
            proxy_cache_bypass $http_authorization;
            
            # Cache para conteúdo estático
            proxy_cache STATIC;
            proxy_cache_valid 200 302 1d;
            proxy_cache_valid 404 10m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
        }
        
        # Localizações especiais para conteúdo estático
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            proxy_pass http://backend;
            proxy_cache STATIC;
            proxy_cache_valid 200 302 7d;
            add_header Cache-Control "public, max-age=31536000";
            access_log off;
            expires 1y;
        }
        
        # Configuração para verificações de health check
        location /health {
            access_log off;
            return 200 "OK";
        }
    }
}
